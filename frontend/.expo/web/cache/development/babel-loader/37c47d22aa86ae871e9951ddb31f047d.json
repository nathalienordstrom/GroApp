{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/nathalienordstrom/Desktop/gro-app/gro-app/gro/node_modules/react-native-calendar-strip/src/Scroller.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from \"prop-types\";\nimport { RecyclerListView, DataProvider, LayoutProvider } from \"recyclerlistview\";\nimport moment from \"moment\";\n\nvar CalendarScroller = function (_Component) {\n  _inherits(CalendarScroller, _Component);\n\n  var _super = _createSuper(CalendarScroller);\n\n  function CalendarScroller(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarScroller);\n\n    _this = _super.call(this, props);\n\n    _this.scrollLeft = function () {\n      if (_this.state.visibleStartIndex === 0) {\n        return;\n      }\n\n      var newIndex = Math.max(_this.state.visibleStartIndex - _this.state.numVisibleItems, 0);\n\n      _this.rlv.scrollToIndex(newIndex, true);\n    };\n\n    _this.scrollRight = function () {\n      var newIndex = _this.state.visibleStartIndex + _this.state.numVisibleItems;\n\n      if (newIndex >= _this.state.numDays - 1) {\n        _this.rlv.scrollToEnd(true);\n\n        return;\n      }\n\n      _this.rlv.scrollToIndex(newIndex, true);\n    };\n\n    _this.scrollToDate = function (date) {\n      var targetDate = moment(date);\n      var _this$props = _this.props,\n          minDate = _this$props.minDate,\n          maxDate = _this$props.maxDate;\n\n      if (minDate && targetDate.isBefore(minDate, \"day\")) {\n        targetDate = minDate;\n      } else if (maxDate && targetDate.isAfter(maxDate, \"day\")) {\n        targetDate = maxDate;\n      }\n\n      for (var i = 0; i < _this.state.data.length; i++) {\n        if (_this.state.data[i].date.isSame(targetDate, \"day\")) {\n          _this.rlv.scrollToIndex(i, true);\n\n          break;\n        }\n      }\n    };\n\n    _this.shiftDaysForward = function () {\n      var visibleStartDate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.visibleStartDate;\n      var prevVisStart = visibleStartDate.clone();\n      var newStartDate = prevVisStart.clone().subtract(Math.floor(_this.state.numDays / 3), \"days\");\n\n      _this.updateDays(prevVisStart, newStartDate);\n    };\n\n    _this.shiftDaysBackward = function (visibleStartDate) {\n      var prevVisStart = visibleStartDate.clone();\n      var newStartDate = prevVisStart.clone().subtract(Math.floor(_this.state.numDays * 2 / 3), \"days\");\n\n      _this.updateDays(prevVisStart, newStartDate);\n    };\n\n    _this.updateDays = function (prevVisStart, newStartDate) {\n      if (_this.shifting) {\n        return;\n      }\n\n      var _this$props2 = _this.props,\n          minDate = _this$props2.minDate,\n          maxDate = _this$props2.maxDate;\n      var data = [];\n      var _newStartDate = newStartDate;\n\n      if (minDate && newStartDate.isBefore(minDate, \"day\")) {\n        _newStartDate = moment(minDate);\n      }\n\n      for (var i = 0; i < _this.state.numDays; i++) {\n        var date = _newStartDate.clone().add(i, \"days\");\n\n        if (maxDate && date.isAfter(maxDate, \"day\")) {\n          break;\n        }\n\n        data.push({\n          date: date\n        });\n      }\n\n      if (data.length < _this.props.maxSimultaneousDays) {\n        return;\n      }\n\n      var _loop = function _loop(_i) {\n        if (data[_i].date.isSame(prevVisStart, \"day\")) {\n          _this.shifting = true;\n\n          _this.rlv.scrollToIndex(_i, false);\n\n          _this.timeoutResetPositionId = setTimeout(function () {\n            _this.timeoutResetPositionId = null;\n\n            _this.rlv.scrollToIndex(_i, false);\n\n            _this.shifting = false;\n          }, 800);\n          return \"break\";\n        }\n      };\n\n      for (var _i = 0; _i < data.length; _i++) {\n        var _ret = _loop(_i);\n\n        if (_ret === \"break\") break;\n      }\n\n      _this.setState({\n        data: data,\n        dataProvider: _this.dataProvider.cloneWithRows(data)\n      });\n    };\n\n    _this.onVisibleIndicesChanged = function (all, now, notNow) {\n      var _this$state = _this.state,\n          data = _this$state.data,\n          numDays = _this$state.numDays,\n          numVisibleItems = _this$state.numVisibleItems,\n          _visStartDate = _this$state.visibleStartDate,\n          _visEndDate = _this$state.visibleEndDate;\n      var visibleStartIndex = all[0];\n      var visibleStartDate = data[visibleStartIndex] ? data[visibleStartIndex].date : moment();\n      var visibleEndIndex = Math.min(visibleStartIndex + numVisibleItems - 1, data.length - 1);\n      var visibleEndDate = data[visibleEndIndex] ? data[visibleEndIndex].date : moment();\n      var _this$props3 = _this.props,\n          updateMonthYear = _this$props3.updateMonthYear,\n          onWeekChanged = _this$props3.onWeekChanged;\n\n      if (!_visStartDate || !_visEndDate || !visibleStartDate.isSame(_visStartDate, \"week\") || !visibleEndDate.isSame(_visEndDate, \"week\") || !visibleStartDate.isSame(_visStartDate, \"month\") || !visibleEndDate.isSame(_visEndDate, \"month\")) {\n        var visStart = visibleStartDate && visibleStartDate.clone();\n        var visEnd = visibleEndDate && visibleEndDate.clone();\n        onWeekChanged && onWeekChanged(visStart, visEnd);\n      }\n\n      updateMonthYear && updateMonthYear(visibleStartDate, visibleEndDate);\n\n      if (visibleStartIndex === 0) {\n        _this.shiftDaysBackward(visibleStartDate);\n      } else {\n        var minEndOffset = numDays - numVisibleItems;\n\n        if (minEndOffset > numVisibleItems) {\n          for (var _iterator = _createForOfIteratorHelperLoose(all), _step; !(_step = _iterator()).done;) {\n            var a = _step.value;\n\n            if (a > minEndOffset) {\n              _this.shiftDaysForward(visibleStartDate);\n\n              break;\n            }\n          }\n        }\n      }\n\n      _this.setState({\n        visibleStartDate: visibleStartDate,\n        visibleEndDate: visibleEndDate,\n        visibleStartIndex: visibleStartIndex\n      });\n    };\n\n    _this.onLayout = function (event) {\n      var width = event.nativeEvent.layout.width;\n\n      _this.setState({\n        numVisibleItems: Math.floor(width / _this.state.itemWidth)\n      });\n    };\n\n    _this.rowRenderer = function (type, data, i, extState) {\n      return _this.props.renderDay && _this.props.renderDay(_objectSpread(_objectSpread({}, data), extState));\n    };\n\n    _this.timeoutResetPositionId = null;\n\n    _this.updateLayout = function (renderDayParams) {\n      var itemHeight = renderDayParams.size;\n      var itemWidth = itemHeight + renderDayParams.marginHorizontal * 2;\n      var layoutProvider = new LayoutProvider(function (index) {\n        return 0;\n      }, function (type, dim) {\n        dim.width = itemWidth;\n        dim.height = itemHeight;\n      });\n      return {\n        layoutProvider: layoutProvider,\n        itemHeight: itemHeight,\n        itemWidth: itemWidth\n      };\n    };\n\n    _this.dataProvider = new DataProvider(function (r1, r2) {\n      return r1 !== r2;\n    });\n\n    _this.updateDaysData = function (data) {\n      return {\n        data: data,\n        numDays: data.length,\n        dataProvider: _this.dataProvider.cloneWithRows(data)\n      };\n    };\n\n    _this.state = _objectSpread(_objectSpread(_objectSpread({}, _this.updateLayout(props.renderDayParams)), _this.updateDaysData(props.data)), {}, {\n      numVisibleItems: 1\n    });\n    return _this;\n  }\n\n  _createClass(CalendarScroller, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timeoutResetPositionId !== null) {\n        clearTimeout(this.timeoutResetPositionId);\n        this.timeoutResetPositionId = null;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var newState = {};\n      var updateState = false;\n\n      if (this.props.renderDayParams.size !== prevProps.renderDayParams.size) {\n        updateState = true;\n        newState = this.updateLayout(this.props.renderDayParams);\n      }\n\n      if (this.props.data !== prevProps.data) {\n        updateState = true;\n        newState = _objectSpread(_objectSpread({}, newState), this.updateDaysData(this.props.data));\n      }\n\n      if (updateState) {\n        this.setState(newState);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.data || this.state.numDays === 0 || !this.state.itemHeight) {\n        return null;\n      }\n\n      var pagingProps = this.props.pagingEnabled ? {\n        decelerationRate: 0,\n        snapToInterval: this.state.itemWidth * this.state.numVisibleItems\n      } : {};\n      return React.createElement(View, {\n        style: {\n          height: this.state.itemHeight,\n          flex: 1\n        },\n        onLayout: this.onLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 7\n        }\n      }, React.createElement(RecyclerListView, {\n        ref: function ref(rlv) {\n          return _this2.rlv = rlv;\n        },\n        layoutProvider: this.state.layoutProvider,\n        dataProvider: this.state.dataProvider,\n        rowRenderer: this.rowRenderer,\n        extendedState: this.props.renderDayParams,\n        initialRenderIndex: this.props.initialRenderIndex,\n        onVisibleIndicesChanged: this.onVisibleIndicesChanged,\n        isHorizontal: true,\n        externalScrollView: this.props.externalScrollView,\n        scrollViewProps: _objectSpread({\n          showsHorizontalScrollIndicator: false,\n          contentContainerStyle: {\n            paddingRight: this.state.itemWidth / 2\n          }\n        }, pagingProps),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return CalendarScroller;\n}(Component);\n\nCalendarScroller.propTypes = {\n  data: PropTypes.array.isRequired,\n  initialRenderIndex: PropTypes.number,\n  renderDay: PropTypes.func,\n  renderDayParams: PropTypes.object.isRequired,\n  minDate: PropTypes.any,\n  maxDate: PropTypes.any,\n  maxSimultaneousDays: PropTypes.number,\n  updateMonthYear: PropTypes.func,\n  onWeekChanged: PropTypes.func,\n  externalScrollView: PropTypes.func,\n  pagingEnabled: PropTypes.bool\n};\nCalendarScroller.defaultProps = {\n  data: [],\n  renderDayParams: {}\n};\nexport { CalendarScroller as default };","map":{"version":3,"sources":["/Users/nathalienordstrom/Desktop/gro-app/gro-app/gro/node_modules/react-native-calendar-strip/src/Scroller.js"],"names":["React","Component","PropTypes","RecyclerListView","DataProvider","LayoutProvider","moment","CalendarScroller","props","scrollLeft","state","visibleStartIndex","newIndex","Math","max","numVisibleItems","rlv","scrollToIndex","scrollRight","numDays","scrollToEnd","scrollToDate","date","targetDate","minDate","maxDate","isBefore","isAfter","i","data","length","isSame","shiftDaysForward","visibleStartDate","prevVisStart","clone","newStartDate","subtract","floor","updateDays","shiftDaysBackward","shifting","_newStartDate","add","push","maxSimultaneousDays","timeoutResetPositionId","setTimeout","setState","dataProvider","cloneWithRows","onVisibleIndicesChanged","all","now","notNow","_visStartDate","_visEndDate","visibleEndDate","visibleEndIndex","min","updateMonthYear","onWeekChanged","visStart","visEnd","minEndOffset","a","onLayout","event","width","nativeEvent","layout","itemWidth","rowRenderer","type","extState","renderDay","updateLayout","renderDayParams","itemHeight","size","marginHorizontal","layoutProvider","index","dim","height","r1","r2","updateDaysData","clearTimeout","prevProps","prevState","newState","updateState","pagingProps","pagingEnabled","decelerationRate","snapToInterval","flex","initialRenderIndex","externalScrollView","showsHorizontalScrollIndicator","contentContainerStyle","paddingRight","propTypes","array","isRequired","number","func","object","any","bool","defaultProps"],"mappings":"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","sourcesContent":["// This is a bi-directional infinite scroller.\r\n// As the beginning & end are reached, the dates are recalculated and the current\r\n// index adjusted to match the previous visible date.\r\n// RecyclerListView helps to efficiently recycle instances, but the data that\r\n// it's fed is finite. Hence the data must be shifted at the ends to appear as\r\n// an infinite scroller.\r\n\r\nimport React, { Component } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport PropTypes from \"prop-types\";\r\nimport { RecyclerListView, DataProvider, LayoutProvider } from \"recyclerlistview\";\r\nimport moment from \"moment\";\r\n\r\nexport default class CalendarScroller extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    initialRenderIndex: PropTypes.number,\r\n    renderDay: PropTypes.func,\r\n    renderDayParams: PropTypes.object.isRequired,\r\n    minDate: PropTypes.any,\r\n    maxDate: PropTypes.any,\r\n    maxSimultaneousDays: PropTypes.number,\r\n    updateMonthYear: PropTypes.func,\r\n    onWeekChanged: PropTypes.func,\r\n    externalScrollView: PropTypes.func,\r\n    pagingEnabled: PropTypes.bool\r\n  }\r\n\r\n  static defaultProps = {\r\n    data: [],\r\n    renderDayParams: {},\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.timeoutResetPositionId = null;\r\n\r\n    this.updateLayout = renderDayParams => {\r\n      const itemHeight = renderDayParams.size;\r\n      const itemWidth = itemHeight + renderDayParams.marginHorizontal * 2;\r\n\r\n      const layoutProvider = new LayoutProvider(\r\n        index => 0, // only 1 view type\r\n        (type, dim) => {\r\n          // Square, plus horizontal margin\r\n          dim.width = itemWidth;\r\n          dim.height = itemHeight;\r\n        }\r\n      );\r\n\r\n      return { layoutProvider, itemHeight, itemWidth };\r\n    }\r\n\r\n    this.dataProvider = new DataProvider((r1, r2) => {\r\n      return r1 !== r2;\r\n    });\r\n\r\n    this.updateDaysData = data => {\r\n      return {\r\n        data,\r\n        numDays: data.length,\r\n        dataProvider: this.dataProvider.cloneWithRows(data),\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      ...this.updateLayout(props.renderDayParams),\r\n      ...this.updateDaysData(props.data),\r\n      numVisibleItems: 1, // updated in onLayout\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timeoutResetPositionId !== null) {\r\n      clearTimeout(this.timeoutResetPositionId);\r\n      this.timeoutResetPositionId = null;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    let newState = {};\r\n    let updateState = false;\r\n\r\n    if (this.props.renderDayParams.size !== prevProps.renderDayParams.size) {\r\n      updateState = true;\r\n      newState = this.updateLayout(this.props.renderDayParams);\r\n    }\r\n\r\n    if (this.props.data !== prevProps.data) {\r\n      updateState = true;\r\n      newState = {...newState, ...this.updateDaysData(this.props.data)};\r\n    }\r\n\r\n    if (updateState) {\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  // Scroll left, guarding against start index.\r\n  scrollLeft = () => {\r\n    if (this.state.visibleStartIndex === 0) {\r\n      return;\r\n    }\r\n    const newIndex = Math.max(this.state.visibleStartIndex - this.state.numVisibleItems, 0);\r\n    this.rlv.scrollToIndex(newIndex, true);\r\n  }\r\n\r\n  // Scroll right, guarding against end index.\r\n  scrollRight = () => {\r\n    const newIndex = this.state.visibleStartIndex + this.state.numVisibleItems;\r\n    if (newIndex >= (this.state.numDays - 1)) {\r\n      this.rlv.scrollToEnd(true); // scroll to the very end, including padding\r\n      return;\r\n    }\r\n    this.rlv.scrollToIndex(newIndex, true);\r\n  }\r\n\r\n  // Scroll to given date, and check against min and max date if available.\r\n  scrollToDate = (date) => {\r\n    let targetDate = moment(date);\r\n    const {\r\n      minDate,\r\n      maxDate,\r\n    } = this.props;\r\n\r\n    // Falls back to min or max date when the given date exceeds the available dates\r\n    if (minDate && targetDate.isBefore(minDate, \"day\")) {\r\n      targetDate = minDate;\r\n    } else if (maxDate && targetDate.isAfter(maxDate, \"day\")) {\r\n      targetDate = maxDate;\r\n    }\r\n\r\n    for (let i = 0; i < this.state.data.length; i++) {\r\n      if (this.state.data[i].date.isSame(targetDate, \"day\")) {\r\n        this.rlv.scrollToIndex(i, true);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Shift dates when end of list is reached.\r\n  shiftDaysForward = (visibleStartDate = this.state.visibleStartDate) => {\r\n    const prevVisStart = visibleStartDate.clone();\r\n    const newStartDate = prevVisStart.clone().subtract(Math.floor(this.state.numDays / 3), \"days\");\r\n    this.updateDays(prevVisStart, newStartDate);\r\n  }\r\n\r\n  // Shift dates when beginning of list is reached.\r\n  shiftDaysBackward = (visibleStartDate) => {\r\n    const prevVisStart = visibleStartDate.clone();\r\n    const newStartDate = prevVisStart.clone().subtract(Math.floor(this.state.numDays * 2/3), \"days\");\r\n    this.updateDays(prevVisStart, newStartDate);\r\n  }\r\n\r\n  updateDays = (prevVisStart, newStartDate) => {\r\n    if (this.shifting) {\r\n      return;\r\n    }\r\n    const {\r\n      minDate,\r\n      maxDate,\r\n    } = this.props;\r\n    const data = [];\r\n    let _newStartDate = newStartDate;\r\n    if (minDate && newStartDate.isBefore(minDate, \"day\")) {\r\n      _newStartDate = moment(minDate);\r\n    }\r\n    for (let i = 0; i < this.state.numDays; i++) {\r\n      let date = _newStartDate.clone().add(i, \"days\");\r\n      if (maxDate && date.isAfter(maxDate, \"day\")) {\r\n        break;\r\n      }\r\n      data.push({date});\r\n    }\r\n    // Prevent reducing range when the minDate - maxDate range is small.\r\n    if (data.length < this.props.maxSimultaneousDays) {\r\n      return;\r\n    }\r\n\r\n    // Scroll to previous date\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].date.isSame(prevVisStart, \"day\")) {\r\n        this.shifting = true;\r\n        this.rlv.scrollToIndex(i, false);\r\n        // RecyclerListView sometimes returns position to old index after\r\n        // moving to the new one. Set position again after delay.\r\n        this.timeoutResetPositionId = setTimeout(() => {\r\n          this.timeoutResetPositionId = null;\r\n          this.rlv.scrollToIndex(i, false);\r\n          this.shifting = false; // debounce\r\n        }, 800);\r\n        break;\r\n      }\r\n    }\r\n    this.setState({\r\n      data,\r\n      dataProvider: this.dataProvider.cloneWithRows(data),\r\n    });\r\n  }\r\n\r\n  // Track which dates are visible.\r\n  onVisibleIndicesChanged = (all, now, notNow) => {\r\n    const {\r\n      data,\r\n      numDays,\r\n      numVisibleItems,\r\n      visibleStartDate: _visStartDate,\r\n      visibleEndDate: _visEndDate,\r\n    } = this.state;\r\n    const visibleStartIndex = all[0];\r\n    const visibleStartDate = data[visibleStartIndex] ? data[visibleStartIndex].date : moment();\r\n    const visibleEndIndex = Math.min(visibleStartIndex + numVisibleItems - 1, data.length - 1);\r\n    const visibleEndDate = data[visibleEndIndex] ? data[visibleEndIndex].date : moment();\r\n\r\n    const {\r\n      updateMonthYear,\r\n      onWeekChanged,\r\n    } = this.props;\r\n\r\n    // Fire month/year update on both week and month changes.  This is\r\n    // necessary for the header and onWeekChanged updates.\r\n    if (!_visStartDate || !_visEndDate ||\r\n        !visibleStartDate.isSame(_visStartDate, \"week\") ||\r\n        !visibleEndDate.isSame(_visEndDate, \"week\") ||\r\n        !visibleStartDate.isSame(_visStartDate, \"month\") ||\r\n        !visibleEndDate.isSame(_visEndDate, \"month\") )\r\n    {\r\n      const visStart = visibleStartDate && visibleStartDate.clone();\r\n      const visEnd = visibleEndDate && visibleEndDate.clone();\r\n      onWeekChanged && onWeekChanged(visStart, visEnd);\r\n    }\r\n\r\n    // Always update weekstart/end for WeekSelectors.\r\n    updateMonthYear && updateMonthYear(visibleStartDate, visibleEndDate);\r\n\r\n    if (visibleStartIndex === 0) {\r\n      this.shiftDaysBackward(visibleStartDate);\r\n    } else {\r\n      const minEndOffset = numDays - numVisibleItems;\r\n      if (minEndOffset > numVisibleItems) {\r\n        for (let a of all) {\r\n          if (a > minEndOffset) {\r\n            this.shiftDaysForward(visibleStartDate);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      visibleStartDate,\r\n      visibleEndDate,\r\n      visibleStartIndex,\r\n    });\r\n  }\r\n\r\n  onLayout = event => {\r\n    let width = event.nativeEvent.layout.width;\r\n    this.setState({\r\n      numVisibleItems: Math.floor(width / this.state.itemWidth),\r\n    });\r\n  }\r\n\r\n  rowRenderer = (type, data, i, extState) => {\r\n    return this.props.renderDay && this.props.renderDay({...data, ...extState});\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.data || this.state.numDays === 0 || !this.state.itemHeight) {\r\n      return null;\r\n    }\r\n\r\n    const pagingProps = this.props.pagingEnabled ? {\r\n      decelerationRate: 0,\r\n      snapToInterval: this.state.itemWidth * this.state.numVisibleItems\r\n    } : {};\r\n\r\n    return (\r\n      <View\r\n        style={{ height: this.state.itemHeight, flex: 1 }}\r\n        onLayout={this.onLayout}\r\n      >\r\n        <RecyclerListView\r\n          ref={rlv => this.rlv = rlv}\r\n          layoutProvider={this.state.layoutProvider}\r\n          dataProvider={this.state.dataProvider}\r\n          rowRenderer={this.rowRenderer}\r\n          extendedState={this.props.renderDayParams}\r\n          initialRenderIndex={this.props.initialRenderIndex}\r\n          onVisibleIndicesChanged={this.onVisibleIndicesChanged}\r\n          isHorizontal\r\n          externalScrollView={this.props.externalScrollView}\r\n          scrollViewProps={{\r\n            showsHorizontalScrollIndicator: false,\r\n            contentContainerStyle: { paddingRight: this.state.itemWidth / 2 },\r\n            ...pagingProps\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}