{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nathalienordstrom/Desktop/GroApp/GroApp/frontend/components/LoginForm.js\";\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteralLoose([\"\\ncolor: #ABA97B;\\nfont-size: 20px;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteralLoose([\"\\nflex-direction: row;\\nmargin-top: 20px;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\nfont-size: 20px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\ncolor: black;\\nfont-size: 50px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\nalign-items: center;\\nborder: black solid 1px;\\nmargin-left: 20px;\\nmargin-right: 20px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\nmargin-left: 50px;\\nmargin-right: 50px;\\nborder: black solid 1px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\nbackground-color: white;\\nflex:1;\\njustify-content: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport LogIn from \"./LogIn\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { user } from \"../reducers/user\";\nimport styled from 'styled-components/native';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nvar SIGNUP_URL = \"http://localhost:8080/users\";\nvar LOGIN_URL = \"http://localhost:8080/sessions\";\nexport var LoginForm = function LoginForm() {\n  var dispatch = useDispatch();\n  var accessToken = useSelector(function (store) {\n    return store.user.login.accessToken;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handleLoginSuccess = function handleLoginSuccess(loginResponse) {\n    dispatch(user.actions.setAccessToken({\n      accessToken: loginResponse.accessToken\n    }));\n    dispatch(user.actions.setUserId({\n      userId: loginResponse.userId\n    }));\n    dispatch(user.actions.setStatusMessage({\n      statusMessage: 'Login Success'\n    }));\n  };\n\n  var handleLoginFailed = function handleLoginFailed(loginError) {\n    dispatch(user.actions.setAccessToken({\n      accessToken: null\n    }));\n    dispatch(user.actions.setStatusMessage({\n      statusMessage: loginError\n    }));\n  };\n\n  var handleSignup = function handleSignup(event) {\n    event.preventDefault();\n    fetch(SIGNUP_URL, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        password: password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return handleLoginSuccess(json);\n    }).catch(function (err) {\n      return handleLoginFailed(err);\n    });\n  };\n\n  var handleLogin = function handleLogin(event) {\n    event.preventDefault();\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        password: password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return handleLoginSuccess(json);\n    }).catch(function (err) {\n      return handleLoginFailed(err);\n    });\n  };\n\n  if (!accessToken) {\n    return React.createElement(Main, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, React.createElement(Container, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, React.createElement(LogIn, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, React.createElement(FormHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Sign up\"), React.createElement(FormName, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, React.createElement(Ionicons, {\n      name: \"person\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), React.createElement(Input, {\n      required: true,\n      value: name,\n      placeholder: \"namn\",\n      onChange: function onChange(event) {\n        return setName(event.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    })), React.createElement(FormPassword, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, React.createElement(FontAwesome, {\n      name: \"key\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), React.createElement(Input, {\n      required: true,\n      value: password,\n      placeholder: \"l\\xF6rsenord\",\n      onChange: function onChange(event) {\n        return setPassword(event.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    })), React.createElement(Buttons, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: handleSignup,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styles.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, \"Bli Medlem\"))), React.createElement(TouchableOpacity, {\n      onPress: handleLogin,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styles.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, \"Logga in\")))))));\n  } else {\n    return React.createElement(Profile, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 12\n      }\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  button: {\n    width: 100,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#202020',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 2,\n    borderRadius: 50,\n    backgroundColor: 'transparent',\n    marginTop: 5\n  }\n});\nvar Main = styled.View(_templateObject());\nvar Container = styled.View(_templateObject2());\nvar Form = styled.View(_templateObject3());\nvar FormHeader = styled.TextInput(_templateObject4());\nvar Input = styled.Text(_templateObject5());\nvar FormName = styled.View(_templateObject6());\nvar FormPassword = styled.View(_templateObject7());\nvar Buttons = styled.View(_templateObject8());\nvar ButtonText = styled.Text(_templateObject9());\nexport default LoginForm;","map":{"version":3,"sources":["/Users/nathalienordstrom/Desktop/GroApp/GroApp/frontend/components/LoginForm.js"],"names":["React","useState","LogIn","useDispatch","useSelector","user","styled","Ionicons","FontAwesome","SIGNUP_URL","LOGIN_URL","LoginForm","dispatch","accessToken","store","login","name","setName","password","setPassword","handleLoginSuccess","loginResponse","actions","setAccessToken","setUserId","userId","setStatusMessage","statusMessage","handleLoginFailed","loginError","handleSignup","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","json","catch","err","handleLogin","target","value","styles","button","StyleSheet","create","width","height","alignItems","justifyContent","shadowColor","shadowOffset","shadowRadius","borderRadius","backgroundColor","marginTop","Main","View","Container","Form","FormHeader","TextInput","Input","Text","FormName","FormPassword","Buttons","ButtonText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport LogIn from \"./LogIn\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { user } from \"../reducers/user\";\nimport styled from 'styled-components/native';\nimport { FlatList, StyleSheet, View, Alert, ScrollView, TouchableOpacity, Text } from 'react-native'\n\n\nimport { Ionicons } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\n\nconst SIGNUP_URL = \"http://localhost:8080/users\";\nconst LOGIN_URL = \"http://localhost:8080/sessions\";\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const accessToken = useSelector((store) => store.user.login.accessToken);\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLoginSuccess = (loginResponse) => {\n    dispatch(\n      user.actions.setAccessToken({ accessToken: loginResponse.accessToken })\n    );\n    dispatch(user.actions.setUserId({ userId: loginResponse.userId }));\n    dispatch(user.actions.setStatusMessage({ statusMessage: 'Login Success' }));\n\n  };\n\n  const handleLoginFailed = (loginError) => {\n    dispatch(user.actions.setAccessToken({ accessToken: null }));\n    dispatch(user.actions.setStatusMessage({ statusMessage: loginError }));\n\n  };\n\n  // To sign up a user.\n  const handleSignup = (event) => {\n    event.preventDefault();\n\n    fetch(SIGNUP_URL, {\n      method: \"POST\",\n      body: JSON.stringify({ name, password }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((json) => handleLoginSuccess(json))\n      .catch((err) => handleLoginFailed(err));\n  };\n\n  // To sign up a user.\n  const handleLogin = (event) => {\n    event.preventDefault();\n\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      body: JSON.stringify({ name, password }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((json) => handleLoginSuccess(json))\n      .catch((err) => handleLoginFailed(err));\n  };\n\n  if (!accessToken) {\n    // If user is logged out, show login form\n    return (\n      <Main>\n        <Container>\n          <LogIn />\n          <Form>\n            <FormHeader>Sign up</FormHeader>\n\n            <FormName>\n             \n                <Ionicons name=\"person\" size={24} color=\"black\" />\n                <Input\n                  required\n                  value={name}\n                  placeholder='namn'\n                  onChange={(event) => setName(event.target.value)}\n                />\n              \n            </FormName>\n            <FormPassword>\n              \n                <FontAwesome name=\"key\" size={24} color=\"black\" />\n                <Input\n                  required\n                  value={password}\n                  placeholder='lörsenord'\n                  onChange={(event) => setPassword(event.target.value)}\n                />\n              \n            </FormPassword>\n            <Buttons>\n\n              <TouchableOpacity onPress={handleSignup}>\n                <View style={styles.button}>\n\n                  <ButtonText>Bli Medlem</ButtonText>\n\n                </View>\n              </TouchableOpacity>\n\n              <TouchableOpacity onPress={handleLogin}>\n                <View style={styles.button}>\n\n                  <ButtonText>Logga in\n                  </ButtonText>\n\n                </View>\n              </TouchableOpacity>\n              \n            </Buttons>\n\n          </Form>\n        </Container>\n      </Main>\n    );\n  } else {\n    // If user is logged in, show profile\n    return <Profile />;\n  }\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 100,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#202020',\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 2,\n    borderRadius: 50,\n    backgroundColor: 'transparent',\n    marginTop: 5,\n  },\n\n\n});\n\nconst Main = styled.View`\nbackground-color: white;\nflex:1;\njustify-content: center;\n`\n\nconst Container = styled.View`\nmargin-left: 50px;\nmargin-right: 50px;\nborder: black solid 1px;\n`\n\nconst Form = styled.View`\nalign-items: center;\nborder: black solid 1px;\nmargin-left: 20px;\nmargin-right: 20px;\n`\nconst FormHeader = styled.TextInput`\ncolor: black;\nfont-size: 50px;\n`\nconst Input = styled.Text`\nfont-size: 20px;\n`\n\n\nconst FormName = styled.View`\n\n`\nconst FormPassword = styled.View`\n\n`\nconst Buttons = styled.View`\nflex-direction: row;\nmargin-top: 20px;\n`\n\nconst ButtonText = styled.Text`\ncolor: #ABA97B;\nfont-size: 20px;\n`\n\n\n\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}