{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nathalienordstrom/Desktop/GroApp/GroApp/frontend/components/LogIn.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\nbackground-color: #BD614E;\\nflex: 1;\\nalign-items: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\nbackground-color: #BD614E;\\nflex: 1;\\nalign-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport { user } from \"../reducers/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styled from 'styled-components/native';\nvar URL = \"http://localhost:8080/users\";\nexport var LogIn = function LogIn() {\n  var dispatch = useDispatch();\n  var accessToken = useSelector(function (store) {\n    return store.user.login.accessToken;\n  });\n  var userId = useSelector(function (store) {\n    return store.user.login.userId;\n  });\n  var statusMessage = useSelector(function (store) {\n    return store.user.login.statusMessage;\n  });\n\n  var loginSuccess = function loginSuccess(loginResponse) {};\n\n  var loginFailed = function loginFailed(loginError) {};\n\n  var logout = function logout() {};\n\n  var login = function login() {\n    fetch(URL + \"/\" + userId, {\n      method: \"GET\",\n      headers: {\n        Authorization: accessToken\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return loginSuccess(json);\n    }).catch(function (err) {\n      return loginFailed(err);\n    });\n  };\n\n  return React.createElement(Main, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }\n  }, React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Profile\")), React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Status :\"), React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Response :\"), React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"\" + statusMessage));\n};\nvar Main = styled.View(_templateObject());\nvar Header = styled.View(_templateObject2());\nexport default LogIn;","map":{"version":3,"sources":["/Users/nathalienordstrom/Desktop/GroApp/GroApp/frontend/components/LogIn.js"],"names":["React","useState","useEffect","user","useDispatch","useSelector","styled","URL","LogIn","dispatch","accessToken","store","login","userId","statusMessage","loginSuccess","loginResponse","loginFailed","loginError","logout","fetch","method","headers","Authorization","then","res","json","catch","err","Main","View","Header"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;;;;;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,IAAMC,GAAG,GAAG,6BAAZ;AACA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AACzB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,WAAW,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACR,IAAN,CAAWS,KAAX,CAAiBF,WAA5B;AAAA,GAAD,CAA/B;AACA,MAAMG,MAAM,GAAGR,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACR,IAAN,CAAWS,KAAX,CAAiBC,MAA5B;AAAA,GAAD,CAA1B;AACA,MAAMC,aAAa,GAAGT,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACR,IAAN,CAAWS,KAAX,CAAiBE,aAA5B;AAAA,GAAD,CAAjC;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD,EAAmB,CAAE,CAA1C;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD,EAAgB,CAAE,CAAtC;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM,CAAE,CAAvB;;AAEA,MAAMP,KAAK,GAAG,SAARA,KAAQ,GAAM;AAElBQ,IAAAA,KAAK,CAAIb,GAAJ,SAAWM,MAAX,EAAqB;AACxBQ,MAAAA,MAAM,EAAE,KADgB;AAGxBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEb;AAAjB;AAHe,KAArB,CAAL,CAKGc,IALH,CAKQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KALR,EAOGF,IAPH,CAOQ,UAACE,IAAD;AAAA,aAAUX,YAAY,CAACW,IAAD,CAAtB;AAAA,KAPR,EAQGC,KARH,CAQS,UAACC,GAAD;AAAA,aAASX,WAAW,CAACW,GAAD,CAApB;AAAA,KART;AASD,GAXD;;AAaA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADN,CADI,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOd,aAAP,CANF,CADF;AAgBD,CAzCM;AAmDP,IAAMe,IAAI,GAAGvB,MAAM,CAACwB,IAAV,mBAAV;AAKA,IAAMC,MAAM,GAAGzB,MAAM,CAACwB,IAAV,oBAAZ;AAMA,eAAetB,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { user } from \"../reducers/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FlatList, StyleSheet, Image, Alert, ScrollView, TouchableOpacity, Text } from 'react-native'\nimport styled from 'styled-components/native';\n\nconst URL = \"http://localhost:8080/users\";\nexport const LogIn = () => {\n  const dispatch = useDispatch();\n  const accessToken = useSelector((store) => store.user.login.accessToken);\n  const userId = useSelector((store) => store.user.login.userId);\n  const statusMessage = useSelector((store) => store.user.login.statusMessage);\n\n  const loginSuccess = (loginResponse) => {};\n\n  const loginFailed = (loginError) => {};\n\n  const logout = () => {};\n\n  const login = () => {\n    // Include userId in the path\n    fetch(`${URL}/${userId}`, {\n      method: \"GET\",\n      // Include the accessToken to get the protected endpoint\n      headers: { Authorization: accessToken },\n    })\n      .then((res) => res.json())\n      // SUCCESS: Do something with the information we got back\n      .then((json) => loginSuccess(json))\n      .catch((err) => loginFailed(err)); //401\n  };\n\n  return (\n    <Main>\n<Header>\n      <h1>Profile</h1>\n      </Header>\n      <h2>Status :</h2>\n      <h4>Response :</h4>\n      <p>{`${statusMessage}`}</p>\n      {/* <h4>userId :</h4>\n      <p> {`${userId}`}</p>\n      <h4>accessToken :</h4>\n      <p> {`${accessToken}`}</p>\n      <input type=\"submit\" onClick={login} value=\"Test Login\" />\n      <input type=\"submit\" onClick={logout} value=\"Test Logout\" /> */}\n    </Main>\n  );\n};\n\n// const styles = StyleSheet.create({\n//   : {\n\n//   },\n \n\n// });\n\nconst Main = styled.View`\nbackground-color: #BD614E;\nflex: 1;\nalign-items: center;\n`\nconst Header = styled.View`\nbackground-color: #BD614E;\nflex: 1;\nalign-items: center;\n`\n\nexport default LogIn;\n"]},"metadata":{},"sourceType":"module"}