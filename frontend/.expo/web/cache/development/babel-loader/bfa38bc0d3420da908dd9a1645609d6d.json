{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nathalienordstrom/Desktop/gro-app/gro-app/gro/App.js\";\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport Diary from \"./components/Diary\";\nimport Explore from \"./components/Explore\";\nimport Profile from \"./components/Profile\";\nimport Statistics from \"./components/Statistics\";\nimport HomePage from \"./components/HomePage\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport 'react-native-gesture-handler';\nvar Stack = createStackNavigator();\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (fontLoaded) {\n    return React.createElement(NavigationContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, React.createElement(Stack.Navigator, {\n      initialRouteName: \"HomeActivity\",\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"Home\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"HomePage\",\n      component: HomePage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Explore\",\n      component: Explore,\n      options: {\n        title: 'Utforska',\n        headerTintColor: '#fff',\n        headerStyle: {\n          backgroundColor: '#5A673E'\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Diary\",\n      component: Diary,\n      options: {\n        title: 'Dagbok',\n        headerTintColor: '#fff',\n        headerStyle: {\n          backgroundColor: '#BD614E'\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Statistics\",\n      component: Statistics,\n      options: {\n        title: 'Statestik',\n        headerTintColor: '#fff',\n        headerStyle: {\n          backgroundColor: '#C497A4'\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        title: 'Profil',\n        headerTintColor: '#fff',\n        headerStyle: {\n          backgroundColor: '#CE7937'\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    })));\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontLoaded(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }\n    });\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/nathalienordstrom/Desktop/gro-app/gro-app/gro/App.js"],"names":["React","useState","Diary","Explore","Profile","Statistics","HomePage","NavigationContainer","createStackNavigator","Stack","App","fontLoaded","setFontLoaded","headerShown","title","headerTintColor","headerStyle","backgroundColor","getFonts"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,QAAR,QAAwB,OAAxB;AAEA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAO,8BAAP;AAKA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;;AAQA,IAAME,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACoBT,QAAQ,CAAC,KAAD,CAD5B;AAAA;AAAA,MACTU,UADS;AAAA,MACGC,aADH;;AAGhB,MAAID,UAAJ,EAAgB;AAEhB,WACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAC,cAAlC;AACE,MAAA,aAAa,EAAE;AAAEE,QAAAA,WAAW,EAAE;AAAf,OADjB;AACyC,MAAA,gBAAgB,EAAC,MAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,SAAS,EAAEP,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAOE,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,SAAS,EAAEH,OAFb;AAGE,MAAA,OAAO,EAAE;AACPW,QAAAA,KAAK,EAAE,UADA;AAEPC,QAAAA,eAAe,EAAE,MAFV;AAGPC,QAAAA,WAAW,EAAE;AACXC,UAAAA,eAAe,EAAE;AADN;AAHN,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAoBE,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,SAAS,EAAEf,KAFb;AAGE,MAAA,OAAO,EAAE;AACPY,QAAAA,KAAK,EAAE,QADA;AAEPC,QAAAA,eAAe,EAAE,MAFV;AAGPC,QAAAA,WAAW,EAAE;AACXC,UAAAA,eAAe,EAAE;AADN;AAHN,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EAiCE,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,SAAS,EAAEZ,UAFb;AAGE,MAAA,OAAO,EAAE;AACPS,QAAAA,KAAK,EAAE,WADA;AAEPC,QAAAA,eAAe,EAAE,MAFV;AAGPC,QAAAA,WAAW,EAAE;AACXC,UAAAA,eAAe,EAAE;AADN;AAHN,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCF,EA4CE,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,SAAS,EAAEb,OAFb;AAGE,MAAA,OAAO,EAAE;AACPU,QAAAA,KAAK,EAAE,QADA;AAEPC,QAAAA,eAAe,EAAE,MAFV;AAGPC,QAAAA,WAAW,EAAE;AACXC,UAAAA,eAAe,EAAE;AADN;AAHN,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CF,CAFF,CADF;AA6DD,GA/DC,MA+DK;AACL,WACE,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAIC,QAA1B;AAAoC,MAAA,QAAQ,EAAI;AAAA,eAAKN,aAAa,CAAC,IAAD,CAAlB;AAAA,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;AACA,CAvED;;AAyEA,eAAeF,GAAf","sourcesContent":["import * as React from 'react'\nimport {useState}  from 'react';\n\nimport Diary from './components/Diary';\nimport Explore from './components/Explore';\nimport Profile from './components/Profile';\nimport Statistics from './components/Statistics';\nimport HomePage from './components/HomePage';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport 'react-native-gesture-handler';\n\n// import * as Font from 'expo-font';\n// import AppLoading from 'expo-app-loading';\n\nconst Stack = createStackNavigator();\n\n// async function getFonts(){\n//   await Font.loadAsync({\n//     \"akkurat-tt-light\": require('./assets/fonts/AkkuratTT-Light.ttf')\n//   })\n// }\n\nconst App = () => {\n  const [fontLoaded, setFontLoaded] = useState(false)\n\n  if (fontLoaded) {\n\n  return (\n    <NavigationContainer>\n\n      <Stack.Navigator initialRouteName=\"HomeActivity\"\n        screenOptions={{ headerShown: false }} initialRouteName=\"Home\">\n\n        <Stack.Screen\n          name=\"HomePage\"\n          component={HomePage} />\n\n        <Stack.Screen\n          name=\"Explore\"\n          component={Explore}\n          options={{\n            title: 'Utforska',\n            headerTintColor: '#fff',\n            headerStyle: {\n              backgroundColor: '#5A673E',\n            },\n          }}\n        />\n\n\n        <Stack.Screen\n          name='Diary'\n          component={Diary}\n          options={{\n            title: 'Dagbok',\n            headerTintColor: '#fff',\n            headerStyle: {\n              backgroundColor: '#BD614E',\n            },\n          }}\n        />\n\n\n        <Stack.Screen\n          name=\"Statistics\"\n          component={Statistics}\n          options={{\n            title: 'Statestik',\n            headerTintColor: '#fff',\n            headerStyle: {\n              backgroundColor: '#C497A4',\n            },\n          }} />\n\n        <Stack.Screen\n          name=\"Profile\"\n          component={Profile}\n          options={{\n            title: 'Profil',\n            headerTintColor: '#fff',\n            headerStyle: {\n              backgroundColor: '#CE7937',\n            },\n          }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n\n  )\n} else {\n  return (\n    <AppLoading startAsync = {getFonts} onFinish = {()=> setFontLoaded(true)} />\n  )\n}\n}\n\nexport default App;\n\n\n// const App = () => {\n//   return (\n//     <>\n//       <NavigationContainer>\n//         <Stack.Navigator>\n//           <Stack.Screen name=\"HomePage\" component={HomaPage} />\n//         </Stack.Navigator>\n\n//       </NavigationContainer>\n\n//     </>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}