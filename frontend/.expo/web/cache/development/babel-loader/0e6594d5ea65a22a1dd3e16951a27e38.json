{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nathalienordstrom/Desktop/gro-app/gro-app/gro/App.js\";\n\nimport React, { useState } from 'react';\nimport Diary from \"./components/Diary\";\nimport Explore from \"./components/Explore\";\nimport Profile from \"./components/Profile\";\nimport Statistics from \"./components/Statistics\";\nimport Homepage from \"./components/Homepage\";\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'AkkuratTT': require(\"./assets/fonts/AkkuratTT-Light.ttf\")\n  });\n};\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  if (fontsLoaded) {\n    return React.createElement(Diary, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    });\n  } else {\n    React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    });\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/nathalienordstrom/Desktop/gro-app/gro-app/gro/App.js"],"names":["React","useState","Diary","Explore","Profile","Statistics","Homepage","Font","AppLoading","getFonts","loadAsync","require","App","fontsLoaded","setFontsLoaded"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAMF,IAAI,CAACG,SAAL,CAAe;AACpC,iBAAaC,OAAO;AADgB,GAAf,CAAN;AAAA,CAAjB;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACsBX,QAAQ,CAAC,KAAD,CAD9B;AAAA;AAAA,MACTY,WADS;AAAA,MACIC,cADJ;;AAGhB,MAAGD,WAAH,EAAe;AACb,WACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGD,GAJD,MAIO;AAEL,wBAAC,UAAD;AACE,MAAA,UAAU,EAAEJ,QADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMK,cAAc,CAAC,IAAD,CAApB;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKD;AAEF,CAhBD;;AAmBA,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Diary from './components/Diary';\nimport Explore from './components/Explore';\nimport Profile from './components/Profile';\nimport Statistics from './components/Statistics';\nimport Homepage from './components/Homepage';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\n\nconst getFonts = () => Font.loadAsync({\n  'AkkuratTT': require('./assets/fonts/AkkuratTT-Light.ttf')\n})\n\nconst App = () => {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  if(fontsLoaded){\n    return (\n        <Diary />\n    );\n  } else {\n    \n    <AppLoading\n      startAsync={getFonts}\n      onFinish={() => setFontsLoaded(true)}\n    />\n    \n  }\n\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}