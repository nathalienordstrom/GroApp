{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/nathalienordstrom/Desktop/gro-app/gro-app/gro/App.js\";\n\nimport React, { useState } from 'react';\nimport Diary from \"./components/Diary\";\nimport Explore from \"./components/Explore\";\nimport Profile from \"./components/Profile\";\nimport Statistics from \"./components/Statistics\";\nimport Homepage from \"./components/Homepage\";\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'HeptaSlab': require(\"./assets/fonts/HeptaSlab-ExtraLight.ttf\")\n  });\n};\n\nvar App = function App() {\n  return React.createElement(Diary, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/nathalienordstrom/Desktop/gro-app/gro-app/gro/App.js"],"names":["React","useState","Diary","Explore","Profile","Statistics","Homepage","Font","AppLoading","getFonts","loadAsync","require","App"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAMF,IAAI,CAACG,SAAL,CAAe;AACpC,iBAAaC,OAAO;AADgB,GAAf,CAAN;AAAA,CAAjB;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAId,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAYH,CAhBD;;AAmBA,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Diary from './components/Diary';\nimport Explore from './components/Explore';\nimport Profile from './components/Profile';\nimport Statistics from './components/Statistics';\nimport Homepage from './components/Homepage';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\n\nconst getFonts = () => Font.loadAsync({\n  'HeptaSlab': require('./assets/fonts/HeptaSlab-ExtraLight.ttf')\n});\n\nconst App = () => {\n  // const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  // if(!fontsLoaded){\n    return (\n        <Diary />\n    );\n  // } else {\n  //   return (\n  //   <AppLoading\n  //     startAsync={getFonts}\n  //     onFinish={() => setFontsLoaded(true)}\n  //   />\n  //   )\n  // }\n\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}