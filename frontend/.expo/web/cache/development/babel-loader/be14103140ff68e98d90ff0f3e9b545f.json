{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nathalienordstrom/Desktop/GroApp/GroApp/frontend/node_modules/react-native-animated-input/src/AnimatedInput/index.js\";\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./styles\";\n\nvar AnimatedInput = function AnimatedInput(_ref) {\n  var placeholder = _ref.placeholder,\n      errorText = _ref.errorText,\n      valid = _ref.valid,\n      errorColor = _ref.errorColor,\n      disabled = _ref.disabled,\n      value = _ref.value,\n      prefix = _ref.prefix,\n      sufix = _ref.sufix,\n      styleInput = _ref.styleInput,\n      styleLabel = _ref.styleLabel,\n      styleError = _ref.styleError,\n      styleContent = _ref.styleContent,\n      styleBodyContent = _ref.styleBodyContent,\n      others = _objectWithoutProperties(_ref, [\"placeholder\", \"errorText\", \"valid\", \"errorColor\", \"disabled\", \"value\", \"prefix\", \"sufix\", \"styleInput\", \"styleLabel\", \"styleError\", \"styleContent\", \"styleBodyContent\"]);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showInput = _useState2[0],\n      setShowInput = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showError = _useState4[0],\n      setShowError = _useState4[1];\n\n  var _useState5 = useState(new Animated.Value(1)),\n      _useState6 = _slicedToArray(_useState5, 1),\n      animatedIsFocused = _useState6[0];\n\n  var inputFontSize = styleInput.fontSize || styles.input.fontSize;\n  var labelFontSize = styleLabel.fontSize || styles.label.fontSize;\n  var errorFontSize = styleError.fontSize || styles.error.fontSize;\n  useEffect(function () {\n    setShowError(!valid);\n\n    if (value) {\n      setShowInput(true);\n    }\n\n    if (value && !showInput) {\n      startAnimation();\n    }\n\n    animationView();\n  }, [valid, value, animationView, animationLabelFontSize, animatedIsFocused, startAnimation, showInput]);\n\n  var _onBlur = function onBlur() {\n    if (!value) {\n      setShowInput(false);\n      setShowError(false);\n      startAnimation();\n    }\n  };\n\n  var onFocus = function onFocus() {\n    if (!showInput) {\n      startAnimation();\n    }\n  };\n\n  var borderColor = function borderColor() {\n    var borderStyle = {};\n    borderStyle.borderBottomColor = styleBodyContent.borderBottomColor || styles.bodyContent.borderBottomColor;\n\n    if (showError) {\n      borderStyle.borderBottomColor = errorColor || \"#d32f2f\";\n    }\n\n    return borderStyle;\n  };\n\n  var setContentHeight = function setContentHeight() {\n    var fontsHeight = labelFontSize + inputFontSize + errorFontSize;\n    var internalVerticalSpaces = 16;\n    return fontsHeight + internalVerticalSpaces;\n  };\n\n  var getErrorContentSpace = function getErrorContentSpace() {\n    return errorFontSize + 2;\n  };\n\n  var startAnimation = useCallback(function () {\n    Animated.timing(animatedIsFocused, {\n      toValue: showInput ? 1 : 0,\n      duration: 150\n    }).start(function () {\n      if (!showInput) {\n        setShowInput(true);\n      }\n    });\n  }, [animatedIsFocused, showInput]);\n  var animationView = useCallback(function () {\n    var sizeShow = 15 + labelFontSize + inputFontSize;\n    var sizeHide = 15 + labelFontSize;\n    var inputAdjust = {\n      height: animatedIsFocused.interpolate({\n        inputRange: [0, 1],\n        outputRange: [sizeShow, sizeHide]\n      })\n    };\n    return inputAdjust;\n  }, [animatedIsFocused, inputFontSize, labelFontSize]);\n  var animationLabelFontSize = useCallback(function () {\n    var fontAdjust = {\n      fontSize: animatedIsFocused.interpolate({\n        inputRange: [0, 1],\n        outputRange: [labelFontSize, inputFontSize]\n      })\n    };\n    return fontAdjust;\n  }, [animatedIsFocused, inputFontSize, labelFontSize]);\n  return React.createElement(View, {\n    style: [styles.content, styleContent, {\n      height: setContentHeight()\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, React.createElement(Animated.View, {\n    style: [styles.bodyContent, styleBodyContent, borderColor(showError), {\n      marginBottom: showError ? 0 : getErrorContentSpace()\n    }, animationView()],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.Text, {\n    style: [styles.label, styleLabel, animationLabelFontSize()],\n    onPress: function onPress() {\n      return !disabled && onFocus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, placeholder), showInput && React.createElement(View, {\n    style: styles.toucheableLineContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, React.createElement(React.Fragment, null, prefix), React.createElement(TextInput, _extends({}, others, {\n    value: value,\n    pointerEvents: disabled ? \"box-none\" : \"auto\",\n    selectionColor: styleInput.fontColor,\n    autoFocus: true,\n    blurOnSubmit: true,\n    editable: !disabled,\n    onBlur: function onBlur() {\n      return _onBlur();\n    },\n    style: [styles.input, styleInput],\n    onEndEditing: function onEndEditing() {\n      return _onBlur();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  })))), React.createElement(View, {\n    style: styles.sufix,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, sufix)), showError && React.createElement(Text, {\n    style: [styles.error, errorColor && {\n      color: errorColor\n    }, styleError],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, errorText));\n};\n\nAnimatedInput.defaultProps = {\n  valid: true,\n  disabled: false,\n  value: \"\",\n  styleInput: {},\n  styleBodyContent: {},\n  styleLabel: {},\n  styleError: {}\n};\nexport default AnimatedInput;","map":{"version":3,"sources":["/Users/nathalienordstrom/Desktop/GroApp/GroApp/frontend/node_modules/react-native-animated-input/src/AnimatedInput/index.js"],"names":["React","useState","useEffect","useCallback","styles","AnimatedInput","placeholder","errorText","valid","errorColor","disabled","value","prefix","sufix","styleInput","styleLabel","styleError","styleContent","styleBodyContent","others","showInput","setShowInput","showError","setShowError","Animated","Value","animatedIsFocused","inputFontSize","fontSize","input","labelFontSize","label","errorFontSize","error","startAnimation","animationView","animationLabelFontSize","onBlur","onFocus","borderColor","borderStyle","borderBottomColor","bodyContent","setContentHeight","fontsHeight","internalVerticalSpaces","getErrorContentSpace","timing","toValue","duration","start","sizeShow","sizeHide","inputAdjust","height","interpolate","inputRange","outputRange","fontAdjust","content","marginBottom","flex","toucheableLineContent","fontColor","color","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { View, TextInput, Animated, Text } from \"react-native\";\nimport styles from \"./styles\";\n\nconst AnimatedInput = ({\n  placeholder,\n  errorText,\n  valid,\n  errorColor,\n  disabled,\n  value,\n  prefix,\n  sufix,\n  styleInput,\n  styleLabel,\n  styleError,\n  styleContent,\n  styleBodyContent,\n  ...others\n}) => {\n  const [showInput, setShowInput] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [animatedIsFocused] = useState(new Animated.Value(1));\n\n  const inputFontSize = styleInput.fontSize || styles.input.fontSize;\n  const labelFontSize = styleLabel.fontSize || styles.label.fontSize;\n  const errorFontSize = styleError.fontSize || styles.error.fontSize;\n\n  useEffect(() => {\n    setShowError(!valid);\n    if (value) {\n      setShowInput(true);\n    }\n    if (value && !showInput) {\n      startAnimation();\n    }\n    animationView();\n  }, [\n    valid,\n    value,\n    animationView,\n    animationLabelFontSize,\n    animatedIsFocused,\n    startAnimation,\n    showInput\n  ]);\n\n  const onBlur = () => {\n    if (!value) {\n      setShowInput(false);\n      setShowError(false);\n      startAnimation();\n    }\n  };\n\n  const onFocus = () => {\n    if (!showInput) {\n      startAnimation();\n    }\n  };\n\n  const borderColor = () => {\n    const borderStyle = {};\n    borderStyle.borderBottomColor =\n      styleBodyContent.borderBottomColor ||\n      styles.bodyContent.borderBottomColor;\n    if (showError) {\n      borderStyle.borderBottomColor = errorColor || \"#d32f2f\";\n    }\n    return borderStyle;\n  };\n\n  const setContentHeight = () => {\n    const fontsHeight = labelFontSize + inputFontSize + errorFontSize;\n    const internalVerticalSpaces = 16;\n    return fontsHeight + internalVerticalSpaces;\n  };\n\n  const getErrorContentSpace = () => {\n    return errorFontSize + 2;\n  };\n\n  const startAnimation = useCallback(() => {\n    Animated.timing(animatedIsFocused, {\n      toValue: showInput ? 1 : 0,\n      duration: 150\n    }).start(() => {\n      if (!showInput) {\n        setShowInput(true);\n      }\n    });\n  }, [animatedIsFocused, showInput]);\n\n  const animationView = useCallback(() => {\n    const sizeShow = 15 + labelFontSize + inputFontSize;\n    const sizeHide = 15 + labelFontSize;\n    const inputAdjust = {\n      height: animatedIsFocused.interpolate({\n        inputRange: [0, 1],\n        outputRange: [sizeShow, sizeHide]\n      })\n    };\n    return inputAdjust;\n  }, [animatedIsFocused, inputFontSize, labelFontSize]);\n\n  const animationLabelFontSize = useCallback(() => {\n    const fontAdjust = {\n      fontSize: animatedIsFocused.interpolate({\n        inputRange: [0, 1],\n        outputRange: [labelFontSize, inputFontSize]\n      })\n    };\n    return fontAdjust;\n  }, [animatedIsFocused, inputFontSize, labelFontSize]);\n\n  return (\n    <View\n      style={[styles.content, styleContent, { height: setContentHeight() }]}\n    >\n      <Animated.View\n        style={[\n          styles.bodyContent,\n          styleBodyContent,\n          borderColor(showError),\n          { marginBottom: showError ? 0 : getErrorContentSpace() },\n          animationView()\n        ]}\n      >\n        <View style={{ flex: 1 }}>\n          <Animated.Text\n            style={[styles.label, styleLabel, animationLabelFontSize()]}\n            onPress={() => !disabled && onFocus()}\n          >\n            {placeholder}\n          </Animated.Text>\n          {showInput && (\n            <View style={styles.toucheableLineContent}>\n              <>{prefix}</>\n              <TextInput\n                {...others}\n                value={value}\n                pointerEvents={disabled ? \"box-none\" : \"auto\"}\n                selectionColor={styleInput.fontColor}\n                autoFocus\n                blurOnSubmit\n                editable={!disabled}\n                onBlur={() => onBlur()}\n                style={[styles.input, styleInput]}\n                onEndEditing={() => onBlur()}\n              />\n            </View>\n          )}\n        </View>\n        <View style={styles.sufix}>{sufix}</View>\n      </Animated.View>\n      {showError && (\n        <Text\n          style={[\n            styles.error,\n            errorColor && { color: errorColor },\n            styleError\n          ]}\n        >\n          {errorText}\n        </Text>\n      )}\n    </View>\n  );\n};\n\nAnimatedInput.defaultProps = {\n  valid: true,\n  disabled: false,\n  value: \"\",\n  styleInput: {},\n  styleBodyContent: {},\n  styleLabel: {},\n  styleError: {}\n};\n\nexport default AnimatedInput;\n"]},"metadata":{},"sourceType":"module"}