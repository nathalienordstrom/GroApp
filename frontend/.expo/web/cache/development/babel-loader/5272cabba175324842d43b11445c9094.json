{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nathalienordstrom/Desktop/gro-app/gro-app/gro/App.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  background-color: white;\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport * as Font from 'expo-font';\nimport styled from 'styled-components/native';\nimport HomePage from \"./components/HomePage\";\nimport { AppLoading } from 'expo';\nimport Navigator from \"./routes/homeStack\";\nvar Container = styled.View(_templateObject());\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoading = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  if (fontsLoaded) {\n    return React.createElement(Home, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return React.createElement(Container, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, React.createElement(AppLoading, {\n      startAsyns: getFont,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }), React.createElement(HomePage, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/nathalienordstrom/Desktop/gro-app/gro-app/gro/App.js"],"names":["React","useState","Font","styled","HomePage","AppLoading","Navigator","Container","View","App","fontsLoading","setFontsLoaded","fontsLoaded","getFont"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,SAAP;AAEA,IAAMC,SAAS,GAAGJ,MAAM,CAACK,IAAV,mBAAf;;AAQA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACuBR,QAAQ,CAAC,KAAD,CAD/B;AAAA;AAAA,MACTS,YADS;AAAA,MACKC,cADL;;AAGhB,MAAGC,WAAH,EAAe;AACb,WAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAID,GALD,MAKO;AACL,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AACA,MAAA,UAAU,EAAEC,OADZ;AAEA,MAAA,QAAQ,EAAE;AAAA,eAAMF,cAAc,CAAC,IAAD,CAApB;AAAA,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAKF,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALE,CADF;AASD;AAGF,CArBD;;AAuBA,eAAeF,GAAf","sourcesContent":["import React, { useState} from 'react';\nimport * as Font from 'expo-font';\nimport styled from 'styled-components/native';\nimport HomePage from './components/HomePage';\nimport { AppLoading } from 'expo';\nimport Navigator from './routes/homeStack'\n\nconst Container = styled.View`\n  flex: 1;\n  background-color: white;\n  justify-content: center;\n  align-items: center;\n`\n\n\nconst App = () => {\n  const [fontsLoading, setFontsLoaded] = useState(false);\n\n  if(fontsLoaded){\n    return (\n    \n      <Home />\n    );\n  } else {\n    return (\n      <Container>\n      <AppLoading \n      startAsyns={getFont}\n      onFinish={() => setFontsLoaded(true)}\n      />\n    <HomePage />\n  </Container>\n    )\n  }\n\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}